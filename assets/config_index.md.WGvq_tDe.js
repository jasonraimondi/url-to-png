import{_ as e,c as o,o as t,a3 as i}from"./chunks/framework.C3Zxep_Z.js";const _=JSON.parse('{"title":"Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"config/index.md","filePath":"config/index.md"}'),a={name:"config/index.md"},l=i('<h1 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h1><p>Configure various settings through environment variables.</p><h2 id="general-settings" tabindex="-1">General Settings <a class="header-anchor" href="#general-settings" aria-label="Permalink to &quot;General Settings&quot;">​</a></h2><ul><li><code>LOG_LEVEL</code>: Logging level (debug, info, warn, error). Default: <code>debug</code>.</li><li><code>NODE_ENV</code>: Node environment (development, production). Default: <code>development</code>.</li><li><code>PORT</code>: Port number for the application to listen on. Default: <code>3089</code>.</li><li><code>CACHE_CONTROL</code>: Cache-Control header value for the responses. Default: <code>&quot;public, max-age=86400, immutable&quot;</code>.</li></ul><h2 id="allow-list" tabindex="-1">Allow List <a class="header-anchor" href="#allow-list" aria-label="Permalink to &quot;Allow List&quot;">​</a></h2><ul><li><code>ALLOW_LIST</code>: Comma-separated list of allowed domains for screenshots. If undefined or empty, all domains are allowed. Example: <code>ALLOW_LIST=jasonraimondi.com,github.com</code>.</li></ul><h2 id="playwright-options" tabindex="-1">Playwright Options <a class="header-anchor" href="#playwright-options" aria-label="Permalink to &quot;Playwright Options&quot;">​</a></h2><ul><li><code>BROWSER_TIMEOUT</code>: Browser timeout in milliseconds for rendering. Default: <code>10000</code>.</li><li><code>BROWSER_WAIT_UNTIL</code>: Event to wait for before considering the page loaded. Valid options: <code>&#39;load&#39;</code>, <code>&#39;domcontentloaded&#39;</code>, <code>&#39;networkidle&#39;</code>. Default: <code>&#39;domcontentloaded&#39;</code>.</li></ul><h2 id="connection-pool-options" tabindex="-1">Connection Pool Options <a class="header-anchor" href="#connection-pool-options" aria-label="Permalink to &quot;Connection Pool Options&quot;">​</a></h2><ul><li><code>POOL_IDLE_TIMEOUT_MS</code>: Idle timeout for browser connection pool in milliseconds. Default: <code>15000</code>.</li><li><code>POOL_MAX</code>: Maximum number of connections in the browser pool. Default: <code>10</code>.</li><li><code>POOL_MAX_WAITING_CLIENTS</code>: Maximum number of waiting clients for the browser pool. Default: <code>50</code>.</li><li><code>POOL_MIN</code>: Minimum number of connections in the browser pool. Default: <code>2</code>.</li></ul><h2 id="default-browser-options" tabindex="-1">Default Browser Options <a class="header-anchor" href="#default-browser-options" aria-label="Permalink to &quot;Default Browser Options&quot;">​</a></h2><ul><li><code>DEFAULT_WIDTH</code>: Default width of the rendered image in pixels. Default: <code>250</code></li><li><code>DEFAULT_HEIGHT</code>: Default height of the rendered image in pixels. Default: <code>250</code></li><li><code>DEFAULT_VIEWPORT_WIDTH</code>: Default width of the browser viewport in pixels. Default: <code>1080</code></li><li><code>DEFAULT_VIEWPORT_HEIGHT</code>: Default height of the browser viewport in pixels. Default: <code>1080</code></li><li><code>DEFAULT_IS_MOBILE</code>: Whether to emulate a mobile device. Default: <code>false</code></li><li><code>DEFAULT_IS_FULL_PAGE</code>: Whether to capture the full page or clip the page at the viewport height. Default: <code>false</code></li><li><code>DEFAULT_IS_DARK_MODE</code>: Whether to request dark mode. Default: <code>false</code></li><li><code>DEFAULT_DEVICE_SCALE_FACTOR</code>: Default device scale factor (e.g., 2 for retina displays). Default: <code>1</code></li></ul><h2 id="metrics-and-encryption" tabindex="-1">Metrics and Encryption <a class="header-anchor" href="#metrics-and-encryption" aria-label="Permalink to &quot;Metrics and Encryption&quot;">​</a></h2><ul><li><code>METRICS</code>: Enable or disable metrics collection. Default: <code>false</code>.</li><li><code>CRYPTO_KEY</code>: Encryption key for sensitive data.</li></ul><h2 id="storage-providers" tabindex="-1">Storage Providers <a class="header-anchor" href="#storage-providers" aria-label="Permalink to &quot;Storage Providers&quot;">​</a></h2><p>The project supports multiple storage providers for caching rendered images. The storage provider can be configured using the <code>STORAGE_PROVIDER</code> environment variable. The available storage providers are:</p><h3 id="stub-storage-provider-default" tabindex="-1">Stub Storage Provider (default) <a class="header-anchor" href="#stub-storage-provider-default" aria-label="Permalink to &quot;Stub Storage Provider (default)&quot;">​</a></h3><p>The stub storage provider is a placeholder storage provider that doesn&#39;t actually store or retrieve images, it simply logs debug messages. It can be used for testing or when storage functionality is not required.</p><h3 id="filesystem" tabindex="-1">Filesystem <a class="header-anchor" href="#filesystem" aria-label="Permalink to &quot;Filesystem&quot;">​</a></h3><p>The filesystem storage provider allows storing and retrieving rendered images on the local filesystem.</p><ul><li><code>STORAGE_PROVIDER</code>: <code>&quot;filesystem&quot;</code></li><li><code>IMAGE_STORAGE_PATH</code>: The directory path where images will be stored</li></ul><h3 id="s3" tabindex="-1">S3 <a class="header-anchor" href="#s3" aria-label="Permalink to &quot;S3&quot;">​</a></h3><p>The S3 compatible storage provider allows storing and retrieving rendered images using Amazon S3.</p><ul><li><code>STORAGE_PROVIDER</code>: <code>&quot;s3&quot;</code></li><li><code>AWS_BUCKET</code>: The name of the S3 bucket to store images</li><li><code>AWS_ACCESS_KEY_ID</code>: The AWS access key ID</li><li><code>AWS_SECRET_ACCESS_KEY</code>: The AWS secret access key</li><li><code>AWS_DEFAULT_REGION</code>: The AWS region for S3 (default: &quot;us-east-1&quot;)</li><li><code>AWS_FORCE_PATH_STYLE</code>: Set to <code>true</code> to use path-style URLs for S3 (default: <code>false</code>)</li><li><code>AWS_ENDPOINT_URL_S3</code>: The endpoint URL for S3 (optional)</li></ul><h3 id="couchdb" tabindex="-1">CouchDB <a class="header-anchor" href="#couchdb" aria-label="Permalink to &quot;CouchDB&quot;">​</a></h3><p>The CouchDB storage provider allows storing and retrieving rendered images using CouchDB.</p><ul><li><code>STORAGE_PROVIDER</code>: <code>&quot;couchdb&quot;</code></li><li><code>COUCH_DB_PROTOCOL</code>: The protocol for connecting to CouchDB (e.g., &quot;http&quot; or &quot;https&quot;)</li><li><code>COUCH_DB_USER</code>: The CouchDB username</li><li><code>COUCH_DB_PASS</code>: The CouchDB password</li><li><code>COUCH_DB_HOST</code>: The CouchDB host</li><li><code>COUCH_DB_PORT</code>: The CouchDB port</li><li><code>COUCHDB_DATABASE</code>: The name of the CouchDB database to store images (default: &quot;images&quot;)</li></ul>',27),d=[l];function r(c,n,s,u,h,f){return t(),o("div",null,d)}const m=e(a,[["render",r]]);export{_ as __pageData,m as default};
