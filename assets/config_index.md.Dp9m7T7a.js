import{_ as e,c as o,o as a,a2 as i}from"./chunks/framework.B5nJBhaa.js";const m=JSON.parse('{"title":"Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"config/index.md","filePath":"config/index.md"}'),t={name:"config/index.md"},d=i('<h1 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h1><p>URL-to-PNG allows you to configure various settings through environment variables. Here are the available configuration options:</p><h2 id="general-settings" tabindex="-1">General Settings <a class="header-anchor" href="#general-settings" aria-label="Permalink to &quot;General Settings&quot;">​</a></h2><ul><li><code>LOG_LEVEL</code>: Logging level (debug, info, warn, error). Default: <code>debug</code>.</li><li><code>NODE_ENV</code>: Node environment (development, production). Default: <code>development</code>.</li><li><code>PORT</code>: Port number for the application to listen on. Default: <code>3089</code>.</li><li><code>CACHE_CONTROL</code>: Cache-Control header value for the responses. Default: <code>&quot;public, max-age=86400, immutable&quot;</code>.</li></ul><h2 id="allow-list" tabindex="-1">Allow List <a class="header-anchor" href="#allow-list" aria-label="Permalink to &quot;Allow List&quot;">​</a></h2><ul><li><code>ALLOW_LIST</code>: Comma-separated list of allowed domains for screenshots. If undefined or empty, all domains are allowed. Example: <code>ALLOW_LIST=jasonraimondi.com,github.com</code>.</li></ul><h2 id="playwright-options" tabindex="-1">Playwright Options <a class="header-anchor" href="#playwright-options" aria-label="Permalink to &quot;Playwright Options&quot;">​</a></h2><ul><li><code>BROWSER_TIMEOUT</code>: Browser timeout in milliseconds for rendering. Default: <code>10000</code>.</li><li><code>BROWSER_WAIT_UNTIL</code>: Event to wait for before considering the page loaded. Valid options: <code>&#39;load&#39;</code>, <code>&#39;domcontentloaded&#39;</code>, <code>&#39;networkidle&#39;</code>. Default: <code>&#39;domcontentloaded&#39;</code>.</li></ul><h2 id="database-connection-pool" tabindex="-1">Database Connection Pool <a class="header-anchor" href="#database-connection-pool" aria-label="Permalink to &quot;Database Connection Pool&quot;">​</a></h2><ul><li><code>POOL_IDLE_TIMEOUT_MS</code>: Idle timeout for database connection pool in milliseconds. Default: <code>15000</code>.</li><li><code>POOL_MAX</code>: Maximum number of connections in the database pool. Default: <code>10</code>.</li><li><code>POOL_MAX_WAITING_CLIENTS</code>: Maximum number of waiting clients for the database pool. Default: <code>50</code>.</li><li><code>POOL_MIN</code>: Minimum number of connections in the database pool. Default: <code>2</code>.</li></ul><h2 id="metrics-and-encryption" tabindex="-1">Metrics and Encryption <a class="header-anchor" href="#metrics-and-encryption" aria-label="Permalink to &quot;Metrics and Encryption&quot;">​</a></h2><ul><li><code>METRICS</code>: Enable or disable metrics collection. Default: <code>false</code>.</li><li><code>CRYPTO_KEY</code>: Encryption key for sensitive data.</li></ul><h2 id="storage-providers" tabindex="-1">Storage Providers <a class="header-anchor" href="#storage-providers" aria-label="Permalink to &quot;Storage Providers&quot;">​</a></h2><ul><li><code>STORAGE_PROVIDER</code>: Storage provider to use. Valid options: <code>stub</code>, <code>s3</code>, <code>couchdb</code>, <code>filesystem</code>. Default: <code>stub</code>.</li></ul><h3 id="filesystem-storage-provider" tabindex="-1">Filesystem Storage Provider <a class="header-anchor" href="#filesystem-storage-provider" aria-label="Permalink to &quot;Filesystem Storage Provider&quot;">​</a></h3><ul><li><code>IMAGE_STORAGE_PATH</code>: Path to store images when using the filesystem storage provider.</li></ul><h3 id="s3-storage-provider" tabindex="-1">S3 Storage Provider <a class="header-anchor" href="#s3-storage-provider" aria-label="Permalink to &quot;S3 Storage Provider&quot;">​</a></h3><ul><li><code>AWS_BUCKET</code>: AWS S3 bucket name.</li><li><code>AWS_ACCESS_KEY_ID</code>: AWS access key ID.</li><li><code>AWS_SECRET_ACCESS_KEY</code>: AWS secret access key.</li><li><code>AWS_DEFAULT_REGION</code>: AWS default region. Default: <code>us-east-1</code>.</li><li><code>AWS_ENDPOINT_URL_S3</code>: AWS S3 endpoint URL.</li><li><code>AWS_FORCE_PATH_STYLE</code>: Force path-style URLs for S3. Default: <code>false</code>.</li></ul><h3 id="couchdb-storage-provider" tabindex="-1">CouchDB Storage Provider <a class="header-anchor" href="#couchdb-storage-provider" aria-label="Permalink to &quot;CouchDB Storage Provider&quot;">​</a></h3><ul><li><code>COUCH_DB_HOST</code>: CouchDB host.</li><li><code>COUCH_DB_PASS</code>: CouchDB password.</li><li><code>COUCH_DB_PORT</code>: CouchDB port.</li><li><code>COUCH_DB_PROTOCOL</code>: CouchDB protocol.</li><li><code>COUCH_DB_USER</code>: CouchDB username.</li><li><code>COUCHDB_DATABASE</code>: CouchDB database name. Default: <code>images</code>.</li></ul><p>To configure URL-to-PNG, set the appropriate environment variables either in your <code>.env</code> file or pass them as environment variables to your Docker container.</p>',21),l=[d];function r(c,n,s,u,h,_){return a(),o("div",null,l)}const p=e(t,[["render",r]]);export{m as __pageData,p as default};
